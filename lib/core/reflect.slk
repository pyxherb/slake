module std.core.reflect;

pub native class ExceptionHandler {
	Type type;
	u32 off;
}

pub native class MinorFrame {
	@ExceptionHandler[] exceptionHandlers;
	u32 base;
}

pub native class MajorFrame {
	any scopeValue;
	any curFn;
	u32 curIns;
	any[] argStack;
	any[] nextArgStack;
	any[] dataStack;
	any[] localVars;
	any thisReg;
	any returnValue;
	any curException;
	@MinorFrame[] minorFrames;
}

pub native class Context {
	pub native @MajorFrame[] majorFrames;

	bool native isAsync();
}

pub native class IdRefEntry {
	pub string name;
	pub @Type[] genericArgs;
}

pub native class Ref {
	@IdRefEntry entries[];
}

pub native class Module {
	@Ref[] name;
}

pub native class Type {
}

pub native class Attribute {
	pub const string name;
	pub const any[] args;
}

pub native class Module {
	pub const string name;
	pub const @Module[] imports;
}

pub native class Var {
	pub const string name;
}

pub native class Class {
	/// @brief Name of the class.
	pub const string name;

	/// @brief Members of the class.
	pub const any[] members;

	/// @brief Interfaces implemented by the class.
	pub const @Interface[] interfaces;

	/// @brief Parent of the class.
	pub const @Class parent;

	pub native any newInstance(...);
}

pub native class Interface {
	/// @brief Name of the interface.
	pub const native string name;

	/// @brief Methods declared by the interface.
	pub const @Fn[string] methods;

	/// @brief Parent of the interface.
	pub const @Interface parent;
}

pub native class Trait {
	/// @brief Name of the trait.
	pub const native string name;

	/// @brief Members of the interface.
	pub const any[] members;

	/// @brief Parent of the trait.
	pub const @Trait parent;
}

pub native class Struct {
	/// @brief Name of the structure.
	pub const native string name;

	/// @brief Members of the interface.
	pub const @Var[string] members;

	pub native any newInstance(...);
}

///
/// @intro
///
/// @end
///
pub native class Fn {
	/// @brief Name of the function.
	pub const string name;

	/// @brief Return type.
	pub const @Type returnType;

	/// @brief Parameter types.
	pub const @Type[] paramTypes;

	pub native any call(any[] args);
	pub native any callInstantiated(any thisObject, any[] args);

	pub native bool isNative();
}
